[bat]
BISECTION_OLD=v4.18
BISECTION_NEW=v4.20
MACHINE=hikey
KERNEL_RECIPE=linux-generic-mainline
KERNEL_VERSION=git

[lavajob]
timeouts:
  job:
    minutes: 12
  action:
    minutes: 10
  connection:
    minutes: 2

context:
  test_character_delay: 10

device_type: hi6220-hikey-r2
job_name: hikey-ipfreeze-$(date +%Y%m%d)-${SRCREV:0:10}
priority: 90
visibility: public

protocols:
  lava-lxc:
    name: lxc-target
    template: debian
    distribution: debian
    release: jessie
    arch: amd64
    mirror: http://deb.debian.org/debian


actions:
- deploy:
    namespace: tlxc
    timeout:
      minutes: 15
    to: lxc
    packages:
    - wget
    - unzip
    os: debian
- boot:
    namespace: tlxc
    prompts:
    - root@(.*):/#
    timeout:
      minutes: 5
    method: lxc
- test:
    namespace: tlxc
    timeout:
      minutes: 10
    definitions:
    - from: inline
      name: install-google-fastboot
      path: inline/install-google-fastboot.yaml
      repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: install-fastboot
          description: Install fastboot provided by google
        run:
          steps:
          - wget http://dl.google.com/android/repository/platform-tools_r26.0.0-linux.zip
          - unzip -q platform-tools_r26.0.0-linux.zip
          - ln -s \`pwd\`/platform-tools/fastboot /usr/bin/fastboot
          - ln -s \`pwd\`/platform-tools/adb /usr/bin/adb
          - fastboot --version
- deploy:
    timeout:
      minutes: 15
    to: fastboot
    namespace: target
    connection: lxc
    images:
      ptable:
        url: http://images.validation.linaro.org/snapshots.linaro.org/96boards/reference-platform/components/uefi-staging/69/hikey/release/ptable-linux-8g.img
        reboot: hard-reset
      boot:
        url: http://people.linaro.org/~daniel.diaz/lkft-bisect/${BOOTIMG}
        reboot: hard-reset
      system:
        url: http://people.linaro.org/~daniel.diaz/lkft-bisect/${ROOTFSIMG}
        compression: gz
        apply-overlay: true
    os: oe
    protocols:
      lava-lxc:
      - action: fastboot-deploy
        request: pre-power-command
        timeout:
          minutes: 2
- boot:
    namespace: target
    auto_login:
      login_prompt: 'login:'
      username: linaro
      login_commands:
        # Become super user to run tests
      - su
    prompts:
    - hikey:~
    - hikey:/home/linaro#
    - root@(.*):/#
    timeout:
      minutes: 5
    method: grub
    commands: installed
    protocols:
      lava-lxc:
      # other action could be boot-fastboot
      - action: grub-sequence-action
        request: pre-os-command
        timeout:
          minutes: 2
- test:
    namespace: target
    timeout:
      minutes: 20
    definitions:
    - from: inline
      repository:
        metadata:
          format: Lava-Test Test Definition 1.0
          name: minitest
          description: Disable systemd time sync services
        run:
          steps:
          - systemctl stop systemd-timesyncd || true
          - ifconfig -a
          - ip a
      name: minitest
      path: inline/minitest.yaml
      timeout:
        minutes: 2

[build]
# Prepare build directory
rm -rf "$HOME/lkft-bisect/build"
mkdir -p "$HOME/lkft-bisect/build"
(echo sleep 2;\
 echo "sudo find /oe/build-lkft -type d -exec chown $(id -u):$(id -g) {} +";
) > "$HOME/lkft-bisect/build/post"

# Build with Docker
cd $HOME/lkft-bisect
docker run --rm -it \
  -e MACHINE \
  -e KERNEL_RECIPE \
  -e KERNEL_VERSION \
  -e SRCREV_kernel=${SRCREV} \
  -v /opt/oe/downloads:/oe/downloads \
  -v /opt/oe/sstate-cache:/oe/sstate-cache \
  -v $HOME/lkft-bisect/build:/oe/build-lkft \
  mrchapp/lkft-rocko   bitbake rpb-console-image-lkft

[publish]
pushd $HOME/lkft-bisect/build/tmp-*/deploy/images/${MACHINE}/ > /dev/null
ext42simg rpb-console-image-lkft-${MACHINE}-*.rootfs.ext4.gz
mv rpb-console-image-lkft-${MACHINE}-*.rootfs.img.gz rpb-console-image-lkft-${MACHINE}-${SRCREV:0:10}.rootfs.img.gz
export BOOTIMG=$(ls -1 boot-hikey.uefi.img)
export ROOTFSIMG=$(ls -1 rpb-console-image-lkft-${MACHINE}-${SRCREV:0:10}.rootfs.img.gz)
scp -pC ${BOOTIMG} ${ROOTFSIMG} people:public_html/lkft-bisect/
popd > /dev/null

[test]
pushd $HOME/lkft-bisect/build/tmp-*/deploy/images/${MACHINE}/ > /dev/null
export BOOTIMG=$(ls -1 boot-hikey.uefi.img)
export ROOTFSIMG=$(ls -1 rpb-console-image-lkft-${MACHINE}-${SRCREV:0:10}.rootfs.img.gz)
popd > /dev/null

# Create LAVA job
rm -f job.yaml
eval "cat << EOF
$(cat <(bat_get_section lavajob))
" > job.yaml 2> /dev/null

LAVAJOB=$(lavacli jobs submit job.yaml)
lavacli jobs show ${LAVAJOB}
lavacli jobs wait ${LAVAJOB}
lavacli jobs logs ${LAVAJOB} > log-${SHORT_SRCREV}

[discriminator]
LAVA_LOG="log-${SHORT_SRCREV}"
RESULT=$(grep -a 'case....0_minitest' ${LAVA_LOG} | egrep -o \'result\':\ \'[a-z]*\' | tr -d "'" | cut -c9-)
if [ "${RESULT}" = "pass" ]; then
  echo " ****************************************************** "
  echo " All fine and dandy."
  echo " ****************************************************** "
  echo " See ${LAVA_LOG}".
  bat_old
else
  echo " ****************************************************** "
  echo " NETWORK FAILED!"
  echo " ****************************************************** "
  echo " See ${LAVA_LOG}".
  bat_new
fi
